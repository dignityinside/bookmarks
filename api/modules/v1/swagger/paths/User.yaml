/user/login:
  post:
    tags:
      - User
    summary: Get api_key
    requestBody:
      description: Params/values
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              login:
                description: Login
                type: string
                example: user
              password:
                description: Password
                type: string
                example: pass
    responses:
      '200':
        description: Successful operation
        content:
          application/json:
            schema:
              type: object
              properties:
                api_key:
                  description: API-key
                  type: string
                  example: WeqmmCX2W1KRURlQI8LEi2dA8OaKadzc
      '422':
        description: Data Validation Failed
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/ValidationError'
/user/signup:
  post:
    tags:
      - User
    summary: Register new user
    requestBody:
      description: Params/values
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - name
              - password
            properties:
              name:
                required: true
                description: Name
                type: string
                example: John Dow
              password:
                required: true
                description: Password
                type: string
                example: verysecret555
              language:
                description: Language
                type: string
                example: en
    responses:
      '200':
        description: Successful operation
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiUser'
      '422':
        description: Data Validation Failed
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/ValidationError'
/user/{id}:
  get:
    tags:
      - User
    summary: View user profile
    security:
      - bearerAuth: []
    parameters:
      - name: id
        in: path
        description: User id
        required: true
        schema:
          type: integer
    responses:
      '200':
        description: User profile
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiUser'
      '404':
        description: Not found
  put:
    tags:
      - User
    summary: Update user profile
    security:
      - bearerAuth: []
    parameters:
      - name: id
        in: path
        description: User id
        required: true
        schema:
          type: integer
    requestBody:
      description: Params/values
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - name
            properties:
              name:
                description: Name
                type: string
                example: John Dow
              password:
                description: New password
                type: string
                example: newVerysecret999
              email:
                description: New email
                type: string
                example: 'new.email@gmail.com'
              language:
                description: Language
                type: string
                example: en
    responses:
      '204':
        description: Profile updated
      '400':
        description: Body is empty
      '404':
        description: Not found
      '422':
        description: Data Validation Failed
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/ValidationError'
